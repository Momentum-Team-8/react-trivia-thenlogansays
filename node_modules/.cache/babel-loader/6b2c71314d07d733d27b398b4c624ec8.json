{"ast":null,"code":"var _jsxFileName = \"/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/QuestionsByCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getQuestionsByCategory } from './api';\nimport { CategoryList } from './CategoryList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function QuestionsByCategory(selectedCategory) {\n  _s();\n\n  const [questionsByCategory, setQuestionsbyCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getQuestionsByCategory(selectedCategory).then(data => {\n      setQuestionsbyCategory(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? 'Questions Loading' : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questionsByCategory.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [data.question, \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)\n        }, data.question, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n\n_s(QuestionsByCategory, \"mrt9OLA/6KZ6Y6zVt3ZXz1d2cCo=\");\n\n_c = QuestionsByCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsByCategory\");","map":{"version":3,"sources":["/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/QuestionsByCategory.js"],"names":["React","useState","useEffect","axios","getQuestionsByCategory","CategoryList","QuestionsByCategory","selectedCategory","questionsByCategory","setQuestionsbyCategory","loading","setLoading","then","data","map","question"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAuC,OAAvC;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,OAAO,SAASC,mBAAT,CAA8BC,gBAA9B,EAAgD;AAAA;;AACrD,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,sBAAsB,CAACG,gBAAD,CAAtB,CAAyCK,IAAzC,CAA+CC,IAAD,IAAU;AACtDJ,MAAAA,sBAAsB,CAACI,IAAD,CAAtB;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,CAACJ,gBAAD,CALM,CAAT;AAOA,SAAOG,OAAO,GACV,mBADU,gBAGV;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,mBAAmB,CAACM,GAApB,CAAyBD,IAAD,IAAS;AAChC,4BACE;AAAA,iCACE;AAAA,uBAAIA,IAAI,CAACE,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAUF,IAAI,CAACE,QAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAgBD;;GA3BeT,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { getQuestionsByCategory } from './api'\nimport { CategoryList } from './CategoryList'\n\nexport function QuestionsByCategory (selectedCategory) {\n  const [questionsByCategory, setQuestionsbyCategory] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getQuestionsByCategory(selectedCategory).then((data) => {\n      setQuestionsbyCategory(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n\n  return loading\n    ? 'Questions Loading'\n    : (\n      <div>\n        <h4>Quiz</h4>\n        <ul>\n          {questionsByCategory.map((data) =>{\n            return (\n              <div key={data.question}>\n                <p>{data.question}?</p>\n              </div>\n            )\n          })}\n        </ul>\n      </div>\n      )\n}\n"]},"metadata":{},"sourceType":"module"}