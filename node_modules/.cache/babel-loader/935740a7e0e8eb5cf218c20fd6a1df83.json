{"ast":null,"code":"var _jsxFileName = \"/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport he from 'he';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Question(props) {\n  _s();\n\n  const [correct, setCorrect] = useState(null);\n  const {\n    question,\n    incorrect_answers,\n    correct_answers\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [selectedCategory.name, \" Quiz\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questionsByCategory.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [he.decode(data.question), \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)\n        }, data.question, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"tBfcmFhpiFvxJM/WsTYxMo3KYic=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/Question.js"],"names":["React","useState","he","Question","props","correct","setCorrect","question","incorrect_answers","correct_answers","selectedCategory","name","questionsByCategory","map","data","decode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,OAAO,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,iBAAZ;AAA+BC,IAAAA;AAA/B,MAAmDL,KAAzD;AAEA,sBACE;AAAA,4BACE;AAAA,iBAAKM,gBAAgB,CAACC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGC,mBAAmB,CAACC,GAApB,CAAyBC,IAAD,IAAU;AACjC,4BACE;AAAA,iCACE;AAAA,uBAAIZ,EAAE,CAACa,MAAH,CAAUD,IAAI,CAACP,QAAf,CAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAUO,IAAI,CAACP,QAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAlBeJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\nimport he from 'he'\n\nexport function Question (props) {\n  const [correct, setCorrect] = useState(null)\n  const { question, incorrect_answers, correct_answers } = props\n\n  return (\n    <div>\n      <h4>{selectedCategory.name} Quiz</h4>\n      <ul>\n        {questionsByCategory.map((data) => {\n          return (\n            <div key={data.question}>\n              <p>{he.decode(data.question)}?</p>\n            </div>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}