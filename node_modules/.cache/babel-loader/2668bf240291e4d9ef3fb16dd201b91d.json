{"ast":null,"code":"var _jsxFileName = \"/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/QuestionsByCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getQuestionsByCategory } from './api';\nimport he from 'he';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function QuestionsByCategory(props) {\n  _s();\n\n  const [questionsByCategory, setQuestionsbyCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    selectedCategory\n  } = props;\n  useEffect(() => {\n    getQuestionsByCategory(selectedCategory).then(data => {\n      setQuestionsbyCategory(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? 'Questions Loading' : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [selectedCategory.name, \" Quiz\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questionsByCategory.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [data.question, \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, he.decode(data.question), false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n\n_s(QuestionsByCategory, \"mrt9OLA/6KZ6Y6zVt3ZXz1d2cCo=\");\n\n_c = QuestionsByCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsByCategory\");","map":{"version":3,"sources":["/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/QuestionsByCategory.js"],"names":["React","useState","useEffect","getQuestionsByCategory","he","QuestionsByCategory","props","questionsByCategory","setQuestionsbyCategory","loading","setLoading","selectedCategory","then","data","name","map","question","decode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,sBAAT,QAAuC,OAAvC;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,OAAO,SAASC,mBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AAC1C,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAuBL,KAA7B;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,sBAAsB,CAACQ,gBAAD,CAAtB,CAAyCC,IAAzC,CAA+CC,IAAD,IAAU;AACtDL,MAAAA,sBAAsB,CAACK,IAAD,CAAtB;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,CAACC,gBAAD,CALM,CAAT;AAOA,SAAOF,OAAO,GACV,mBADU,gBAGV;AAAA,4BACE;AAAA,iBAAKE,gBAAgB,CAACG,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGP,mBAAmB,CAACQ,GAApB,CAAyBF,IAAD,IAAU;AACjC,4BACE;AAAA,iCACE;AAAA,uBAAIA,IAAI,CAACG,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAUZ,EAAE,CAACa,MAAH,CAAUJ,IAAI,CAACG,QAAf,CAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAgBD;;GA9BeX,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getQuestionsByCategory } from './api'\nimport he from 'he'\n\nexport function QuestionsByCategory (props) {\n  const [questionsByCategory, setQuestionsbyCategory] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  const { selectedCategory } = props\n\n\n  useEffect(() => {\n    getQuestionsByCategory(selectedCategory).then((data) => {\n      setQuestionsbyCategory(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n\n  return loading\n    ? 'Questions Loading'\n    : (\n      <div>\n        <h4>{selectedCategory.name} Quiz</h4>\n        <ul>\n          {questionsByCategory.map((data) => {\n            return (\n              <div key={he.decode(data.question)}>\n                <p>{data.question}?</p>\n              </div>\n            )\n          })}\n        </ul>\n      </div>\n      )\n}\n"]},"metadata":{},"sourceType":"module"}