{"ast":null,"code":"var _jsxFileName = \"/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/Answers.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport he from 'he';\nimport shuffle from 'lodash/shuffle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Answers = props => {\n  _s();\n\n  const {\n    answers\n  } = props;\n  const {\n    correctAnswer,\n    wrongAnswers\n  } = answers;\n  const shuffledAnswers = useMemo(() => shuffle([correctAnswer, ...wrongAnswers]), [correctAnswer, wrongAnswers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: shuffledAnswers.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n      children: he.decode(option)\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Answers, \"chwJ94yDbXtYYJLWKVUniWPl3HU=\");\n\n_c = Answers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"sources":["/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/Answers.js"],"names":["useMemo","he","shuffle","Answers","props","answers","correctAnswer","wrongAnswers","shuffledAnswers","map","option","idx","decode"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAkCF,OAAxC;AACA,QAAMG,eAAe,GAAGR,OAAO,CAAC,MAC9BE,OAAO,CAAC,CAACI,aAAD,EAAgB,GAAGC,YAAnB,CAAD,CADsB,EAE/B,CAACD,aAAD,EAAgBC,YAAhB,CAF+B,CAA/B;AAKA,sBACE;AAAA,cACGC,eAAe,CAACC,GAAhB,CAAoB,CAACC,MAAD,EAASC,GAAT,kBACnB;AAAA,gBAAsBV,EAAE,CAACW,MAAH,CAAUF,MAAV;AAAtB,OAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAfM;;GAAMP,O;;KAAAA,O","sourcesContent":["import { useMemo } from 'react'\nimport he from 'he'\nimport shuffle from 'lodash/shuffle'\n\nexport const Answers = (props) => {\n  const { answers } = props\n  const { correctAnswer, wrongAnswers } = answers\n  const shuffledAnswers = useMemo(() =>\n    shuffle([correctAnswer, ...wrongAnswers]),\n  [correctAnswer, wrongAnswers]\n  )\n\n  return (\n    <div>\n      {shuffledAnswers.map((option, idx) => (\n        <button key={option}>{he.decode(option)}</button>\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}