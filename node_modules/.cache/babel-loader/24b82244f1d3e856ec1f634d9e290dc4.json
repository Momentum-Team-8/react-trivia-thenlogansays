{"ast":null,"code":"var _jsxFileName = \"/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/QuestionsByCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getQuestionsByCategory } from './api';\nimport { Question } from './Question';\nimport he from 'he';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function QuestionsByCategory(props) {\n  _s();\n\n  const [questionsByCategory, setQuestionsbyCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    selectedCategory\n  } = props;\n  useEffect(() => {\n    getQuestionsByCategory(selectedCategory).then(data => {\n      setQuestionsbyCategory(data);\n      setLoading(false);\n    });\n  }, [selectedCategory]);\n  return loading ? 'Questions Loading' : /*#__PURE__*/_jsxDEV(Question, {\n    question: questionsByCategory.question,\n    incorrect_answers: questionsByCategory.incorrect_answers,\n    correct_answer: questionsByCategory.correct_answer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 8\n  }, this);\n}\n\n_s(QuestionsByCategory, \"mrt9OLA/6KZ6Y6zVt3ZXz1d2cCo=\");\n\n_c = QuestionsByCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsByCategory\");","map":{"version":3,"sources":["/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/QuestionsByCategory.js"],"names":["React","useState","useEffect","getQuestionsByCategory","Question","he","QuestionsByCategory","props","questionsByCategory","setQuestionsbyCategory","loading","setLoading","selectedCategory","then","data","question","incorrect_answers","correct_answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,sBAAT,QAAuC,OAAvC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,OAAO,SAASC,mBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AAC1C,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAuBL,KAA7B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,sBAAsB,CAACS,gBAAD,CAAtB,CAAyCC,IAAzC,CAA+CC,IAAD,IAAU;AACtDL,MAAAA,sBAAsB,CAACK,IAAD,CAAtB;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,CAACC,gBAAD,CALM,CAAT;AAOA,SAAOF,OAAO,GACV,mBADU,gBAET,QAAC,QAAD;AACC,IAAA,QAAQ,EAAEF,mBAAmB,CAACO,QAD/B;AAEC,IAAA,iBAAiB,EAAEP,mBAAmB,CAACQ,iBAFxC;AAGC,IAAA,cAAc,EAAER,mBAAmB,CAACS;AAHrC;AAAA;AAAA;AAAA;AAAA,UAFL;AAQD;;GArBeX,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getQuestionsByCategory } from './api'\nimport { Question } from './Question'\nimport he from 'he'\n\nexport function QuestionsByCategory (props) {\n  const [questionsByCategory, setQuestionsbyCategory] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  const { selectedCategory } = props\n\n  useEffect(() => {\n    getQuestionsByCategory(selectedCategory).then((data) => {\n      setQuestionsbyCategory(data)\n      setLoading(false)\n    })\n  }, [selectedCategory])\n\n  return loading\n    ? 'Questions Loading'\n    : (<Question\n        question={questionsByCategory.question}\n        incorrect_answers={questionsByCategory.incorrect_answers}\n        correct_answer={questionsByCategory.correct_answer}\n       />\n      )\n}\n"]},"metadata":{},"sourceType":"module"}