{"ast":null,"code":"var _jsxFileName = \"/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getQuestionsByCategory } from './api';\nimport { QuestionCard } from './QuestionCard';\nimport { Next } from './Next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Game = props => {\n  _s();\n\n  const {\n    selectedCategory,\n    handleBack\n  } = props;\n  const [questByCat, setQuestByCat] = useState([]);\n  const [currentQuestIdx, setCurrentQuestIdx] = useState(0);\n  useEffect(() => {\n    getQuestionsByCategory(selectedCategory).then(data => {\n      setQuestByCat(data);\n    });\n  }, [selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questByCat.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        children: \"Go Back to Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [selectedCategory.name, \" Trivia\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), \"return (\", /*#__PURE__*/_jsxDEV(QuestionCard, {\n        question: questByCat[currentQuestIdx]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Next, {\n        setCurrentQuestIdx: () => setCurrentQuestIdx(currentQuestIdx + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), \")\"]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"YeB3BIX6dNFb7pwkHyQ8uPGjSMo=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/loganatkinson/momentum-assignments/react-trivia-thenlogansays/trivia/src/components/Game.js"],"names":["React","useState","useEffect","getQuestionsByCategory","QuestionCard","Next","Game","props","selectedCategory","handleBack","questByCat","setQuestByCat","currentQuestIdx","setCurrentQuestIdx","then","data","length","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,sBAAT,QAAuC,OAAvC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAmCF,KAAzC;AAEA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,CAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,sBAAsB,CAACK,gBAAD,CAAtB,CAAyCM,IAAzC,CAA+CC,IAAD,IAAU;AACtDJ,MAAAA,aAAa,CAACI,IAAD,CAAb;AACD,KAFD;AAGD,GAJQ,EAIN,CAACP,gBAAD,CAJM,CAAT;AAMA,sBACE;AAAA,cACGE,UAAU,CAACM,MAAX,GAAoB,CAApB,iBACC;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEP,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAKD,gBAAgB,CAACS,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,2BAIE,QAAC,YAAD;AACE,QAAA,QAAQ,EAAEP,UAAU,CAACE,eAAD;AADtB;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,IAAD;AACE,QAAA,kBAAkB,EAAE,MAClBC,kBAAkB,CAACD,eAAe,GAAG,CAAnB;AAFtB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA/BM;;GAAMN,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getQuestionsByCategory } from './api'\nimport { QuestionCard } from './QuestionCard'\nimport { Next } from './Next'\n\nexport const Game = (props) => {\n  const { selectedCategory, handleBack } = props\n\n  const [questByCat, setQuestByCat] = useState([])\n  const [currentQuestIdx, setCurrentQuestIdx] = useState(0)\n\n  useEffect(() => {\n    getQuestionsByCategory(selectedCategory).then((data) => {\n      setQuestByCat(data)\n    })\n  }, [selectedCategory])\n\n  return (\n    <div>\n      {questByCat.length > 0 && (\n        <>\n          <button onClick={handleBack}>Go Back to Categories</button>\n          <h4>{selectedCategory.name} Trivia</h4>\n          return (\n          <QuestionCard\n            question={questByCat[currentQuestIdx]}\n          />\n          <Next\n            setCurrentQuestIdx={() =>\n              setCurrentQuestIdx(currentQuestIdx + 1)}\n          />\n          )\n        </>\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}